package simsditp;

import Database.SQLConnection;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

public class Cetak_nilai extends javax.swing.JPanel {

    private DefaultTableModel tabmode;

    /**
     * Creates new form ReportNilai
     */
    public Cetak_nilai() {
        initComponents();
        txtcari.setBackground(new java.awt.Color(0, 0, 0, 1));
        txtlabel1.setBackground(new java.awt.Color(0, 0, 0, 1));

        updateCombo();
        updateComboTahunAjaran();

        btnCetak.setVisible(false);
        batal.setVisible(false);
        tabelsiswa.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Dapatkan baris yang diklik
                int row = tabelsiswa.getSelectedRow();
                // show tombol jika ada baris yang dipilih
                if (row != -1) {
                    btnCetak.setVisible(true);
                    batal.setVisible(true);
                } else {
                    // hide tombol jika ada baris yang dipilih
                    btnCetak.setVisible(false);
                }
            }
        });
    }

    private void updateCombo() {
        // Hapus semua item dalam combo box sebelum menambahkan item baru
        jkelas.removeAllItems();

        // Tambahkan placeholder jika diperlukan
        jkelas.addItem("-- Pilih Kelas --");

        try {
            String query = "SELECT DISTINCT kelas FROM guru WHERE kelas IS NOT NULL ORDER BY kelas ASC";
            ResultSet result = SQLConnection.doQuery(query);

            while (result.next()) {
                jkelas.addItem(result.getString("kelas")); // Tambahkan kembali item dari hasil query
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Setel placeholder sebagai item yang dipilih secara default
        jkelas.setSelectedItem("-- Pilih Kelas --");
    }

    private void updateComboTahunAjaran() {
        // Hapus semua item dalam combo box sebelum menambahkan item baru
        jTahunAjaran.removeAllItems();

        // Tambahkan placeholder jika diperlukan
        jTahunAjaran.addItem("-- Pilih Tahun Ajaran --");

        try {
            String query = "SELECT DISTINCT tahun_ajaran FROM nilai WHERE tahun_ajaran IS NOT NULL";
            ResultSet result = SQLConnection.doQuery(query);

            while (result.next()) {
                jTahunAjaran.addItem(result.getString("tahun_ajaran")); // Tambahkan kembali item dari hasil query
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Setel placeholder sebagai item yang dipilih secara default
        jTahunAjaran.setSelectedItem("-- Pilih Tahun Ajaran --");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        dataSiswa = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelsiswa = new javax.swing.JTable();
        txtcari = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jkelas = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jSemester = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jTahunAjaran = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnCetak = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        txtlabel1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        mainpanel.setLayout(new java.awt.CardLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        tabelsiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID SISWA", "NIPD", "Nama", "Mapel ", "Semester", "Tahun Ajaran", "Nilai Mapel", "Nilai Tugas", "Nilai UTS", "Nilai UAS", "Predikat Sikap", "Predikat Keterampilan", "Predikat Kompetensi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelsiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelsiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelsiswa);

        txtcari.setText("Pencarian");
        txtcari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtcari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtcariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtcariFocusLost(evt);
            }
        });
        txtcari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcariMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtcariMouseExited(evt);
            }
        });
        txtcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcariActionPerformed(evt);
            }
        });
        txtcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcariKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcariKeyTyped(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cari.png"))); // NOI18N

        jkelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jkelasActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Murid Kelas");

        jSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Pilih Semester ---", "Ganjil", "Genap" }));
        jSemester.setName(""); // NOI18N
        jSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSemesterActionPerformed(evt);
            }
        });

        jLabel23.setText("Semester");

        jTahunAjaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTahunAjaranActionPerformed(evt);
            }
        });

        jLabel24.setText("Kelas");

        jLabel25.setText("Tahun Ajaran");

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/print.png"))); // NOI18N
        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/batal.png"))); // NOI18N
        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jkelas, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTahunAjaran, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jkelas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTahunAjaran, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtcari, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtlabel1.setEditable(false);
        txtlabel1.setBackground(new java.awt.Color(255, 255, 255));
        txtlabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtlabel1.setCaretColor(java.awt.Color.lightGray);
        txtlabel1.setDisabledTextColor(new java.awt.Color(240, 240, 240));
        txtlabel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlabel1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Cetak Nilai Siswa");

        javax.swing.GroupLayout dataSiswaLayout = new javax.swing.GroupLayout(dataSiswa);
        dataSiswa.setLayout(dataSiswaLayout);
        dataSiswaLayout.setHorizontalGroup(
            dataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataSiswaLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(dataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtlabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dataSiswaLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 802, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dataSiswaLayout.setVerticalGroup(
            dataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataSiswaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(dataSiswaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(dataSiswaLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainpanel.add(dataSiswa, "card2");

        add(mainpanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tabelsiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelsiswaMouseClicked
        if (evt.getClickCount() == 1) { // Pastikan hanya single click
            int selectedRowIndex = tabelsiswa.getSelectedRow();
            if (selectedRowIndex != -1) { // Pastikan indeks baris valid
                DefaultTableModel model = (DefaultTableModel) tabelsiswa.getModel();

                // Ambil NISN atau ID siswa dari kolom tertentu (misalnya kolom pertama)
                String id = model.getValueAt(selectedRowIndex, 0).toString();

                // Simpan ID siswa ke variabel global
                IDSISWA = id;
            }
        }
    }//GEN-LAST:event_tabelsiswaMouseClicked

    private void txtcariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcariFocusGained
        String Pencarian = txtcari.getText();
        if (Pencarian.equals("Pencarian")) {
            txtcari.setText("");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariFocusGained

    private void txtcariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtcariFocusLost
        String username = txtcari.getText();
        if (username.equals("") || username.equals("Pencarian")) {
            txtcari.setText("Pencarian");
        }
    }//GEN-LAST:event_txtcariFocusLost

    private void txtcariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseClicked

    }//GEN-LAST:event_txtcariMouseClicked

    private void txtcariMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcariMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariMouseExited

    private void txtcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariActionPerformed

    private void txtcariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariKeyPressed

    private void txtcariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyReleased
        DefaultTableModel obj = (DefaultTableModel) tabelsiswa.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        tabelsiswa.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(txtcari.getText()));
        obj1.setRowFilter(RowFilter.regexFilter("(?i)" + txtcari.getText()));
    }//GEN-LAST:event_txtcariKeyReleased

    private void txtcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcariKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcariKeyTyped

    private void jkelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jkelasActionPerformed
        jkelas.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                tampilkanDataSiswa();
            }
        });
    }//GEN-LAST:event_jkelasActionPerformed

    void tampilkanDataSiswa() {
        String kelas = (String) jkelas.getSelectedItem();
        String semester = (String) jSemester.getSelectedItem();
        String tahunAjaran = (String) jTahunAjaran.getSelectedItem();

        try {
            // Query untuk mengambil data siswa dengan NIPD dan kelas
            String query = "SELECT DISTINCT siswa.nisn, siswa.nipd, siswa.nama_siswa, siswa.kelas, nilai.semester, nilai.tahun_ajaran FROM nilai "
                    + "JOIN siswa ON siswa.nisn = nilai.nisn "
                    + "WHERE siswa.kelas = ? "
                    + "AND nilai.semester = ? "
                    + "AND nilai.tahun_ajaran = ? "
                    + "LIMIT 1"; // Pastikan hanya satu siswa

            ResultSet result = SQLConnection.doPreparedQuery(query, kelas, semester, tahunAjaran);

            // Bersihkan tabel siswa
            DefaultTableModel model = (DefaultTableModel) tabelsiswa.getModel();
            model.setRowCount(0);

            // Set header kolom, tambahkan NIPD dan kelas
            model.setColumnIdentifiers(new Object[]{
                "NISN",
                "NIPD",
                "Nama Siswa",
                "Kelas",
                "Semester",
                "Tahun Ajaran"
            });

            // Ambil hanya satu baris dari ResultSet
            if (result.next()) {
                String nisn = result.getString("nisn");
                String nipd = result.getString("nipd"); // Ambil NIPD
                String namaSiswa = result.getString("nama_siswa");
                String kelasSiswa = result.getString("kelas"); // Ambil kelas
                String ssemester = result.getString("semester");
                String tahunajaran = result.getString("tahun_ajaran");

                // Tambahkan ke tabel
                model.addRow(new Object[]{nisn, nipd, namaSiswa, kelasSiswa, ssemester, tahunajaran});
            } else {
                System.out.println("Data tidak ditemukan.");
            }

            // Terapkan renderer modern untuk tabel
            tabelsiswa.setRowHeight(20); // Tinggi baris
            tabelsiswa.setFont(new Font("Segoe UI", Font.PLAIN, 12)); // Font isi tabel
            tabelsiswa.setForeground(Color.BLACK); // Warna teks

            // Mengatur header tabel
            JTableHeader header = tabelsiswa.getTableHeader();
            header.setFont(new Font("Segoe UI", Font.BOLD, 14));
            header.setBackground(new Color(0, 123, 255)); // Warna biru modern
            header.setForeground(Color.WHITE); // Teks putih
            header.setReorderingAllowed(false); // Non-reorderable kolom

            DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
            headerRenderer.setHorizontalAlignment(SwingConstants.CENTER); // Rata tengah untuk header
            headerRenderer.setBackground(new Color(0, 123, 255)); // Warna biru
            headerRenderer.setForeground(Color.WHITE); // Teks putih

            TableColumnModel columnModel = tabelsiswa.getColumnModel();
            for (int i = 0; i < columnModel.getColumnCount(); i++) {
                columnModel.getColumn(i).setHeaderRenderer(headerRenderer);
            }

            // Mengatur isi tabel
            DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
            cellRenderer.setHorizontalAlignment(SwingConstants.CENTER); // Rata tengah untuk isi tabel

            for (int i = 0; i < tabelsiswa.getColumnCount(); i++) {
                tabelsiswa.getColumnModel().getColumn(i).setCellRenderer(cellRenderer);
            }

            // Alternating row colors (striped rows)
            tabelsiswa.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component component = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    if (row % 2 == 0) {
                        component.setBackground(new Color(240, 240, 240)); // Abu muda
                    } else {
                        component.setBackground(Color.WHITE);
                    }
                    if (isSelected) {
                        component.setBackground(new Color(173, 216, 230)); // Biru muda
                    }
                    return component;
                }
            });

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSemesterActionPerformed
        tampilkanDataSiswa();
    }//GEN-LAST:event_jSemesterActionPerformed

    private void jTahunAjaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTahunAjaranActionPerformed
        tampilkanDataSiswa();
    }//GEN-LAST:event_jTahunAjaranActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        if (IDSISWA != null && !IDSISWA.isEmpty()) { // Pastikan IDSISWA sudah di-set
//            String tahunAjaran = jTahunAjaran.getSelectedItem().toString(); 
            cetakNilai(IDSISWA); // Panggil metode cetak
        } else {
            JOptionPane.showMessageDialog(this, "Pilih data siswa terlebih dahulu.");
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void txtlabel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlabel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlabel1ActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        try {
            tabelsiswa.clearSelection();
            tabelsiswa.setRowSorter(null);
            tampilkanDataSiswa();
            txtcari.setText("Pencarian");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error saat memuat ulang data: " + e.getMessage());
        }
        btnCetak.setVisible(false);
        batal.setVisible(false);
    }//GEN-LAST:event_batalActionPerformed

    public void cetakNilai(String id_siswa) {
        try {
            // Dapatkan koneksi ke database
            Connection c = SQLConnection.getConnection();
            if (c == null) {
                throw new SQLException("Koneksi ke database gagal!");
            }

            // Akses file laporan JRXML dari resources
            InputStream reportSourceStream = getClass().getResourceAsStream("/Laporan/Laporan_Nilai.jrxml");
            if (reportSourceStream == null) {
                throw new FileNotFoundException("File laporan tidak ditemukan di resources!");
            }

            // Kompilasi laporan dari InputStream
            JasperReport jasperReport = JasperCompileManager.compileReport(reportSourceStream);

            // Variabel untuk data siswa
            String nisn = id_siswa; // Gunakan id_siswa yang diterima sebagai nisn
            String nama_siswa = "";
            String kelas = "";
            String semester = jSemester.getSelectedItem().toString();
            String tahun = jTahunAjaran.getSelectedItem().toString();

            // Query untuk mengambil data siswa berdasarkan nisn
            String query = "SELECT * FROM siswa WHERE nisn = ?";
            try (PreparedStatement ps = c.prepareStatement(query)) {
                ps.setString(1, nisn);
                try (ResultSet result = ps.executeQuery()) {
                    if (result.next()) {
                        nama_siswa = result.getString("nama_siswa");
                        kelas = result.getString("kelas");
                    }
                }
            }

            // Format tanggal dalam bahasa Indonesia
            Locale indonesiaLocale = new Locale("id", "ID");
            SimpleDateFormat dateFormatter = new SimpleDateFormat("dd MMMM yyyy", indonesiaLocale);
            String formattedDate = dateFormatter.format(new java.util.Date());

            // Siapkan parameter untuk laporan
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("nisn", nisn);
            parameters.put("nama_siswa", nama_siswa);
            parameters.put("kelas", kelas); // Hapus 'nama_kelas' karena sudah ada 'kelas'
            parameters.put("semester", semester);
            parameters.put("tahun_ajaran", tahun);
            parameters.put("tanggal", formattedDate);

            // Isi laporan dengan data dari database
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, c);

            // Tentukan lokasi output laporan (gunakan folder sementara)
            String reportDest = System.getProperty("java.io.tmpdir") + "/Laporan_Nilai.html";

            // Ekspor laporan ke file HTML
            JasperExportManager.exportReportToHtmlFile(jasperPrint, reportDest);

            // Tampilkan laporan
            JasperViewer.viewReport(jasperPrint, false);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Gagal mencetak laporan: " + e.getMessage());
        }
    }

    private String IDSISWA;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton batal;
    private javax.swing.JButton btnCetak;
    private javax.swing.JPanel dataSiswa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jSemester;
    private javax.swing.JComboBox<String> jTahunAjaran;
    private javax.swing.JComboBox<String> jkelas;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JTable tabelsiswa;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txtlabel1;
    // End of variables declaration//GEN-END:variables
}
